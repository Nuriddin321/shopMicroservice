version: '3.7'

services:
  dashboardapi:
    image: dashboardapi
    depends_on:
      - "dashboardapi_db"
      - "furniture_rabbitmq"
    container_name: dashboardapi
    ports:
      - "3001:80"
    build:
      context: DashboardApi
      dockerfile: Dockerfile
    networks:
      - real

  dashboardapi_db:
    image: postgres:latest
    container_name: dashboardapi_db
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - customer_data:/var/lib/postgresql/data/
    networks:
      - real

  furniture_rabbitmq:
    image: rabbitmq:3-management
    container_name: 'furniture_rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - real

  productapi:
    image: productapi
    depends_on:
      - "mongodb"
      - "furniture_rabbitmq"
    container_name: productapi
    ports:
      - "3002:80"
    build:
      context: ProductApi
      dockerfile: Dockerfile
    networks:
      - real   

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
    networks:
      - real

  cartapi:
    image: cartapi
    depends_on:
      - "dashboardapi_db"
      - "furniture_rabbitmq"
    container_name: cartapi
    ports:
      - "3003:80"
    build:
      context: CartApi
      dockerfile: Dockerfile
    networks:
      - real

  redis:
    image: redis:6.2-alpine
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data
    networks:
      - real 

networks:
  real:
    driver: bridge

volumes:
  customer_data:
  mongodb:
  cache: